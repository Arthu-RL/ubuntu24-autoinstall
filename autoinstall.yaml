autoinstall:
  version: 1
  snaps:
    - name: chromium
      classic: false
    - name: teams-for-linux
      classic: false
    - name: insomnia
      classic: false
  packages:
    - build-essential
    - software-properties-common
    - cmake
    - ssh-tools
    - tree
    - xclip
    - vim
    - curl
    - ca-certificates
    - gnupg
    - lsb-release
    - dpkg
    - git
    - git-absorb
    - git-extras
    - git-lfs
    - bat
    - btop
    - ctop
    - htop
    - nvtop
    - libgtop2-dev
    - python3-dev
    - python3-psutil
    - dconf-editor
    - dos2unix
    - libc6
    - libgcc-s1
    - xterm
    - openssh-server
    - libboost-all-dev
    - build-essential
    - libmbedtls-dev
    - libcppunit-dev
    - libxml2
    - libxml2-dev
    - wget
    - gpg
    - apt-transport-https
    - ffmpeg
    - vlc
    - meld        
    - mesa-utils
    - gnome-tweaks
    - gnome-disk-utility
    - psensor
  late-commands:
    - curtin in-target -- apt-get update
    - curtin in-target -- wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
    - curtin in-target -- dpkg -i cuda-keyring_1.1-1_all.deb
    - curtin in-target -- apt-get update
    - curtin in-target -- apt search nvidia-driver
    - curtin in-target -- apt-get install -y nvidia-driver-550
    - curtin in-target -- apt-get install -y cuda-drivers-550
    - curtin in-target -- wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    - curtin in-target -- install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
    - curtin in-target -- echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" | tee /etc/apt/sources.list.d/vscode.list > /dev/null
    - curtin in-target -- rm -f packages.microsoft.gpg
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y code
    - curtin in-target -- curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y nvidia-container-toolkit
    - curtin in-target -- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg
    - curtin in-target -- echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - curtin in-target -- apt-get update
    - curtin in-target -- apt-get install -y docker-ce docker-ce-cli containerd.io
    - curtin in-target -- export RUNZSH=no
    - curtin in-target -- export CHSH=no
    - curtin in-target -- export KEEP_ZSHRC=yes
    - curtin in-target -- sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    - curtin in-target -- git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-/root/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    - curtin in-target -- git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-/root/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
    - curtin in-target -- git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-/root/.oh-my-zsh/custom}/themes/powerlevel10k
    - curtin in-target -- sed -i 's/^ZSH_THEME=".*"/ZSH_THEME="powerlevel10k\/powerlevel10k"/' /root/.zshrc
    - curtin in-target -- sed -i 's/^plugins=(.*)/plugins=(git zsh-autosuggestions zsh-syntax-highlighting)/' /root/.zshrc
    - curtin in-target -- chsh -s /bin/zsh